# Use "required" for sudo, because we want to use the "trusty" Debian
# distro, which is (currently) only available in the legacy Travis
# infrastructure (i.e., if we put "sudo: false" to use the new container-
# based Travis infrastructure, then "trusty" is not available).  We
# need the "trusty" distro because it has more recent versions of the
# GNU Autotools (i.e., autogen.pl will fail if you use the regular
# distro because the GNU Autotools are too old).
sudo: required
dist: trusty
language: c

# Iterate over 2 different compilers
compiler:
    - gcc
    - clang

# Test only linux now
os:
    - linux

addons:
    # For Linux, make sure we have some extra packages that we like to
    # build with
    apt:
        packages:
            - autoconf
            - automake
            - libtool
            - libnl-3-200
            - libnl-3-dev
            - libnl-route-3-200
            - libnl-route-3-dev
            - libibverbs-dev
            - librdmacm-dev
            - libhwloc-dev
        sources:
            - ubuntu-toolchain-r-test

env:
    global:
        - AM_MAKEFLAGS="-j4"
    matrix:
        - PMIX_BRANCH=master

# Install dependencies for the verbs and usnic providers.  Open MPI is
# not currently using the verbs provider in Libfabric, so we might as
# well not build it.
before_install:
    - git clone -b $PMIX_BRANCH --depth=10 https://github.com/pmix/pmix.git
    - cd pmix && ./autogen.pl && ./configure --prefix=$HOME/bogus/pmix && make -j 2 install && cd ..
    - export LD_LIBRARY_PATH=$HOME/bogus/pmix/lib:$LD_LIBRARY_PATH

# Note that we use "make -k" to do the entire build, even if there was a
# build error in there somewhere.  This prevents us from needing to submit
# to Travis, see the first error, fix that first error, submit again, ...etc.
install:
    - m4 --version
    - autoconf --version
    - automake --version
    - libtool --version
    - ./autogen.pl
    - ./configure --with-pmix=$HOME/bogus/pmix --prefix=$HOME/bogus/ompi
    - make -k

# We only need to distcheck on one OS / compiler combination (this is just
# a minor optimization to make the overall set of builds faster).
script:
    - make check
    - git clone --depth=10 https://github.com/pmix/prrte.git
    - cd prrte && ./autogen.pl && ./configure --with-pmix=$HOME/bogus/pmix --prefix=$HOME/bogus/prrte && make -j 2 install && cd ..
    - export PATH=$HOME/bogus/prrte/bin:$HOME/bogus/ompi/bin:$PATH
    - cd examples && make 
    - prte --daemonize
    - prun -n 1 ./hello_c
    - prun -n 1 ./ring_c
    - prun --oversubscribe -n 2 ./hello_c
    - prun --oversubscribe -n 2 ./ring_c

branches:
  only:
  - topic/noorte
